package control;

import java.security.*;
import java.io.*;
import javax.crypto.*;
import javax.crypto.spec.*;

public final class Crypt {
	public Crypt() {

	}

	public static File encryptFile(File inputFile, String key) {
		File encryptedFile = null;
		if (key.length() != 16) {
			System.out.println("Error: Invalid key length!");
			return encryptedFile;
		}
		try {
			encryptedFile = new File(inputFile.getAbsolutePath() + ".ecpt");
			FileInputStream fis;
			FileOutputStream fos;
			CipherInputStream cis;
			// Creation of Secret key
			
			SecretKeySpec secretKey = new SecretKeySpec(key.getBytes(), "AES");
			// Creation of Cipher objects
			Cipher encrypt = Cipher.getInstance("AES/ECB/PKCS5Padding",
					"SunJCE");
			encrypt.init(Cipher.ENCRYPT_MODE, secretKey);
			// Open the Plaintext file
			try {
				fis = new FileInputStream(inputFile);
				cis = new CipherInputStream(fis, encrypt);
				// Write to the Encrypted file
				fos = new FileOutputStream(encryptedFile);
				byte[] b = new byte[8];
				int i = cis.read(b);
				while (i != -1) {
					fos.write(b, 0, i);
					i = cis.read(b);
				}
				fos.flush();
				fos.close();
				cis.close();
				fis.close();
			} catch (IOException err) {
				System.out.println("Error: Cannot open file!");
				return encryptedFile;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return encryptedFile;
	}

	public static File decryptFile() {
		File decryptedFile = null;

		try {  
            decryptedFile = new File("Downloaded Encrypted Web Page.html");  
            // if file doesnt exists, then create it  
            if (!decryptedFile.exists()) {  
                 decryptedFile.createNewFile();  
            }  
            decryptedFile=retrieve(args);  
            File aesFileBis = new File("Decrypted Web Page.html");  
            FileInputStream fis;  
            FileOutputStream fos;  
            CipherInputStream cis;  
             //Creation of Secret key  
            String key = "MySEcRetKeY";  
            int length=key.length();  
            if(length>16 && length!=16){  
                 key=key.substring(0, 15);  
            }  
            if(length<16 && length!=16){  
                 for(int i=0;i<16-length;i++){  
                      key=key+"0";  
                 }  
            }  
            SecretKeySpec secretKey = new SecretKeySpec(key.getBytes(),"AES");  
             //Creation of Cipher objects  
            Cipher decrypt =Cipher.getInstance("AES/ECB/PKCS5Padding", "SunJCE");  
            decrypt.init(Cipher.DECRYPT_MODE, secretKey);  
            // Open the Encrypted file  
            fis = new FileInputStream(decryptedFile);  
            cis = new CipherInputStream(fis, decrypt);  
            // Write to the Decrypted file  
            fos = new FileOutputStream(aesFileBis);  
            byte[] b = new byte[8];  
            int i = cis.read(b);  
            while (i != -1) {  
                 fos.write(b, 0, i);  
                 i = cis.read(b);  
            }  
            fos.flush();  
            fos.close();  
            cis.close();  
            fis.close();  
       } catch(Exception e){  
            e.printStackTrace();  
       }  
		return decryptedFile;
	}
}
